@model Mvc.Models.Cliente.ClienteViewModel

@{
    ViewData["Title"] = Model.Id == Guid.Empty ? "Criar" : "Editar";
}

@if(Model.Id == Guid.Empty)
{
    <h1>Criar</h1>
} 
else
{
    <h1>Editar</h1>
}
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateOrEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Id" class="form-control" type="hidden" />
            <div class="form-group mb-2">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group mb-2">
                <label asp-for="CpfCnpj" class="control-label">Cpf/Cnpj</label>
                <input asp-for="CpfCnpj" class="form-control" />
                <span asp-validation-for="CpfCnpj" class="text-danger"></span>
            </div>
            <div class="form-group form-check mb-2">
                <label class="form-check-label">
                    @Html.DisplayNameFor(model => model.Ativo) <input class="form-check-input" asp-for="Ativo" />
                </label>
            </div>
            <div class="form-group mb-2">
                @if (Model.Id == Guid.Empty)
                {
                    <input type="submit" value="Criar" class="btn btn-primary" />
                }
                else
                {
                    <input type="submit" value="Editar" class="btn btn-primary" />
                }
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar para a lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
